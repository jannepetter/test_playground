name: Docker Image CI

on:
  push:
    branches: ["pipes"]

env:
  DJANGO_SETTINGS_MODULE: backend.settings
  DB_HOST: ${{ secrets.CI_DB_HOST }}
  DJANGO_SECRET_KEY: ${{ secrets.CI_DJANGO_SECRET_KEY}}
  JWT_SIGNING_KEY: ${{ secrets.CI_JWT_SIGNING_KEY}}
  JWT_VERIFYING_KEY: ${{ secrets.CI_JWT_VERIFYING_KEY}}
  POSTGRES_DB: ${{ secrets.CI_POSTGRES_DB}}
  POSTGRES_PASSWORD: ${{ secrets.CI_POSTGRES_PASSWORD}}
  POSTGRES_USER: ${{ secrets.CI_POSTGRES_USER}}
  APP_ENV: CI
  AWS_ACCOUNT_ID: 1
  AWS_REPO: joo
  AWS_REGION: jep
  TEST_URL: http://server:8000

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build images
        uses: docker/bake-action@v6
        with:
          source: .
          files: docker-compose.ci.yml
          load: true

      - name: Run images
        run: docker compose -f docker-compose.ci.yml up -d

      - name: Run frontend tests
        run: docker exec test_playground-frontend-1 npm run test

      - name: Run backend tests
        run: |
          docker exec test_playground-server-1 bash -c 'sh init.sh && python manage.py test'

      - name: Run e2e tests
        run: docker exec test_playground-testrunner-1 bash -c "cd /app && npx playwright test --reporter=list"

      - name: Run performance smoke test
        run: |
          docker exec test_playground-server-1 sh reset_db.sh
          docker exec test_playground-testrunner-1 k6 run /scripts/smoke.js

      - name: Tear Down Services
        if: always()
        run: |
          docker compose -f docker-compose.ci.yml down
