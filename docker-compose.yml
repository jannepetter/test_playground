services:
  db:
    build:
      context: ./
      dockerfile: Dockerfile.db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./backend/pgdata:/var/lib/postgresql/data
  server:
    build:
      context: ./backend
      dockerfile: ${BACKEND_DOCKERFILE:-Dockerfile}
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-backend.settings}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}
      - JWT_VERIFYING_KEY=${JWT_VERIFYING_KEY}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ENV=${DJANGO_ENV:-development}
    volumes:
      - ./backend:/test_playground/backend
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: ${FRONTEND_DOCKERFILE:-Dockerfile}
      args:
        APP_ENV: ${APP_ENV}
    command: npm run dev
    ports:
      - 3000:3000
    environment:
      - APP_ENV=${APP_ENV}
    volumes:
      - ./frontend:/test_playground/frontend
    depends_on:
      - server

  testrunner:
    build:
      context: ./
      dockerfile: ./loadtest/k6/container/${TESTRUNNER_DOCKERFILE:-Dockerfile.testrunner}
      args:
        APP_ENV: ${APP_ENV}
    image: testrunner
    volumes:
      - ./loadtest/k6:/scripts
      - ./frontend/e2e:/app/e2e
      - ./frontend/playwright.config.js:/app/playwright.config.js
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9323:9323"
    environment:
      - TEST_URL=${TEST_URL}
      - APP_ENV=${APP_ENV}
      - SET_CRONJOBS=0 #disabled by default -> set to local|cloud
      - PLAYWRIGHT_HTML_HOST=0.0.0.0

volumes:
  next_volume:
