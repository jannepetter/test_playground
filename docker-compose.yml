services:
  db:
    build:
      context: ./
      dockerfile: Dockerfile.db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./backend/pgdata:/var/lib/postgresql/data
  server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=db
      - CELERY_BROKER_URL=amqp://myuser:mypassword@rabbitmq:5672//
      - JWT_SIGNING_KEY=your-signing-key
      - JWT_VERIFYING_KEY=your-verifying-key
      - DJANGO_SECRET_KEY=django-secret-key
      - DJANGO_ENV=development
    volumes:
      - ./backend:/test_playground/backend
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run dev
    ports:
      - 3000:3000
    environment:
      - NEXT_PUBLIC_SERVER_URL=http://localhost:8000
    volumes:
      - ./frontend:/test_playground/frontend
    depends_on:
      - server

  testrunner:
    build:
      context: ./
      dockerfile: ./loadtest/k6/container/Dockerfile.testrunner
    image: testrunner
    volumes:
      - ./loadtest/k6:/scripts
      - ./frontend/e2e:/app/e2e
      - ./frontend/playwright.config.js:/app/playwright.config.js
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9323:9323"
    environment:
      - TEST_URL=http://server:8000
      - BASE_URL=http://frontend:3000
      - SET_CRONJOBS=0 #disabled by default -> set to local|cloud
      - PLAYWRIGHT_HTML_HOST=0.0.0.0

volumes:
  next_volume:
